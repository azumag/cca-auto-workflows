name: Issue Processor

on:
  issues:
    types: [labeled]

jobs:
  process-issue:
    name: Process Issue and Create PR
    runs-on: ubuntu-latest
    
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'processing')
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 1

      - name: Remove processing label and run Claude
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            
            // processing ラベルを削除
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'processing'
              });
              console.log('Removed processing label');
            } catch (error) {
              console.log('processing label not found or already removed');
            }
           
      - name: Run Claude Code for Issue Implementation
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          additional_permissions: |
            actions: read

          allowed_tools: "Agent,Bash,Edit,MultiEdit,WebFetch,WebSearch,Write"
          
          direct_prompt: |
            このIssue #${{ github.event.issue.number }} を解決してください。
            
            **タイトル**: ${{ github.event.issue.title }}
            
            **説明**:
            ${{ github.event.issue.body || '説明なし' }}
            
            以下の点を確認してください：
            - Issue の内容を理解し、必要な実装を行ってください
            - 実装が完了したら、変更をコミットしてください
            - 実装が完了し、テストも通った場合は、'pr-ready' ラベルをこのIssueに追加してください
            - 解決済みの場合は、'resolved' ラベルをつけてIssueをクローズしてください
            - 実装できない場合は、理由をコメントで説明してください

      - name: Check if pr-ready label exists and create PR
        id: check-pr-ready
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            
            // Issue の現在のラベルを取得
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            const hasPrReadyLabel = issue.data.labels.some(label => label.name === 'pr-ready');
            
            if (!hasPrReadyLabel) {
              console.log('pr-ready label not found, skipping PR creation');
              return;
            }
            
            console.log('pr-ready label found, proceeding to create PR');
            
            // pr-ready ラベルを削除
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'pr-ready'
              });
              console.log('Removed pr-ready label');
            } catch (error) {
              console.log('pr-ready label removal failed:', error);
            }
            
            // GitHub App Token を使用するために次のステップに情報を渡す
            core.setOutput('create_pr', 'true');
            core.setOutput('issue_number', issueNumber);
            core.setOutput('issue_title', issue.data.title);

      - name: Generate GitHub App Token
        if: always() && steps.check-pr-ready.outputs.create_pr == 'true'
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Create Pull Request
        if: always() && steps.check-pr-ready.outputs.create_pr == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const issueNumber = ${{ steps.check-pr-ready.outputs.issue_number }};
            const issueTitle = `${{ steps.check-pr-ready.outputs.issue_title }}`;
            
            // 現在のブランチ名を取得
            const { data: currentBranch } = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.ref.replace('refs/heads/', '')
            });
            
            // 新しいブランチ名を生成
            const branchName = `fix/issue-${issueNumber}`;
            
            try {
              // 新しいブランチを作成
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/heads/${branchName}`,
                sha: currentBranch.commit.sha
              });
              
              // プルリクエストを作成
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Fix: ${issueTitle}`,
                body: `Fixes #${issueNumber}\n\nAuto-generated PR to resolve issue.`,
                head: branchName,
                base: 'main'
              });
              
              // Issue にコメントを追加
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `✅ PR created: ${pr.data.html_url}`
              });
              
              // pr-created ラベルを追加
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['pr-created']
              });
              
              console.log(`PR created: ${pr.data.html_url}`);
              
            } catch (error) {
              console.error('Error creating PR:', error);
              
              // Issue にエラーコメントを追加
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `❌ Error creating PR: ${error.message}`
              });
            }